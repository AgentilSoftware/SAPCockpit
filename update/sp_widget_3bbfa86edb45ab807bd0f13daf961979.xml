<?xml version="1.0" encoding="UTF-8"?>
<record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <client_script><![CDATA[function ($scope, $interval, spUtil) {
	var c=this;
	$interval (function(){
		spUtil.update($scope);
	}, c.options.widgetupdate);
}]]></client_script>
        <controller_as>c</controller_as>
        <css>#mtable {
    display: table;   
}

div.row &gt; button {
  float:left;
}

.mtable div.row {
  width: 100%;
    margin: 0 auto;
}

.box {
 	text-transform: uppercase;
  font-size: 18px;
  font-weight: bold;
  margin-left: 10px;
  color: black;
}

button {
  /*background: #4e575c;*/
 	background: #3a444a;
  color: white;
  width: 150px;
  height: 50px;
  margin: 5px;
 	text-transform: uppercase;
  font-weight: bold;
  text-align: center;
  border:none;
  transition: all 0.3s;
}

button:hover {
  background: white;
  color: #4e575c;
}



.row {
    display:table-row;
}

.cell {
    width:25%;
}

.critical {  
  background-color:#c71f3b!important;
}

.major {
  background-color:#6b2cec!important;
}

.minor {
  background-color:#ff8700!important;
}

.warning {
  background-color:#ecd82c!important;
}

.informational {
	background-color:#3bb3c9!important;
}
</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>true</has_preview>
        <id>systemmodulealerts</id>
        <internal>false</internal>
        <link/>
        <name>SystemModulesAlerts</name>
        <option_schema>[{"name":"widgetupdate","default_value":"60000","label":"Widget Update Time in Milliseconds","type":"integer"}]</option_schema>
        <public>false</public>
        <roles>x_agsa_sapcockpit.user</roles>
        <script><![CDATA[(function() {
	gs.include('ProMonitorLib');
  var promon=new ProMonitorLib();
	data.config=[
		{"name":"Abap Instance","modules":"ABAP_INSTANCE_MEMORY,ABAP_RESPONSE_TIME"},
		{"name":"Pi/Xi","modules":"PIXI_ABAP_MESSAGES,PIXI_CHANNELS,PIXI_CONSUMER_CACHE,PIXI_JAVA_MESSAGES"},
		{"name":"IDOC","modules":"WAITING_IDOC_MESSAGES,FAILED_IDOC_MESSAGES"},
		{"name":"ICM","modules":"ICM_CONNECTIONS_PERCENTAGE_USED,ICM_QUEUES_PERCENTAGE_USED,ICM_THREAD_PERCENTAGE_USED"},
		{"name":"QRFC","modules":"QRFC,QRFC_IN_ENTRIES,QRFC_OUT_ENTRIES"},
		{"name":"RFC","modules":"RFC_DESTINATION_AVAILABILITY_PER_AS,RFC_DESTINATION_AVAILABILITY_PER_SYSTEM"},
		{"name":"Updates","modules":"UPDATES_ERRORS,UPDATES_INCONSISTENT,UPDATES_NOT_COMPLETED,UPDATES_SERVICE_AVAILABILITY"},
		{"name":"Workprocess","modules":"SAP_ABAP_WORKPROCESSES,WORKPROCESSES_PERCENTAGE_USED,WORKPROCESSES_USED_COUNT"},
		{"name":"Users","modules":"USERS"},
		{"name":"Messages","modules":"MESSAGE_TRANSFER_ERROR,MESSAGE_TRANSFER_WAITING"},
		{"name":"TRFC","modules":"TRFC_IN_ENTRIES,TRFC_OUT_ENTRIES"},
		{"name":"DB","modules":"SAP_DATABASE,SAP_DATABASE_BACKUPS,SAP_ENQUEUES,SAP_EXCLUSIVE_LOCKS"},
		{"name":"Jobs","modules":"ABORTED_JOBS,SAP_JOBS"},
		{"name":"Spool","modules":"SAP_SPOOL"},
		{"name":"Java components","modules":"JAVA_COMPONENTS_STATUS"},
		{"name":"Java instance","modules":"JAVA_INSTANCES_STATUS"},
		{"name":"Java process","modules":"JAVA_PROCESSES_STATUS"},
		{"name":"CCMS","modules":"CUSTOM_CCMS"},
		{"name":"Shortdumps","modules":"SAP_SHORTDUMPS"},
		{"name":"Logs","modules":"APPLICATION_LOG,SAP_SYSLOGS"},
		{"name":"Dispatcher","modules":"SAP_ABAP_DISPATCHER"},
		{"name":"Buffer","modules":"SAP_BUFFERS"},
		{"name":"Change","modules":"SAP_CHANGE_SETTINGS"},
		{"name":"Transactions","modules":"TRANSACTION_AVG_TIME_PER_STEP"}
	];
	
	obje={};
	data.list=[];
	//system=$sp.getParameter('system');
	system='ID2';
	data.system=system;
	data.wer=promon.returnInfo('System Availability','ALL','SYSTEM_AVAILABILITY',system)
	for (var i=0;i<data.config.length;i++) {
		obje.name=data.config[i].name;
		obje.sid=system;
		obje.color=getHighestLevel(system,data.config[i].modules);
		mod="module="+data.config[i].modules;
		if (data.config[i].modules.split(',').length > 1)
			mod=mod.replace(/,/g,'^ORmodule=');
		obje.module=mod;
		data.list.push(obje);
		obje={}
	}
		
	function getHighestLevel(system,mod) {
			var getSev = new GlideRecordSecure("x_agsa_sapcockpit_alarm");
			getSev.addQuery('sid',system);
			getSev.addQuery('module','IN',mod);
			getSev.addQuery('acknowledge',false);
			getSev.orderByDesc('severity_code');
			getSev.query();
			if (getSev.next()) 
				return getSev.severity.toLowerCase();
			return 'ok';
	}
		
})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2018-10-12 09:32:21</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>3bbfa86edb45ab807bd0f13daf961979</sys_id>
        <sys_mod_count>270</sys_mod_count>
        <sys_name>SystemModulesAlerts</sys_name>
        <sys_package display_value="SAPCockpit" source="x_agsa_sapcockpit">e8dd70d1dbcacb407bd0f13daf96199c</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="SAPCockpit">e8dd70d1dbcacb407bd0f13daf96199c</sys_scope>
        <sys_update_name>sp_widget_3bbfa86edb45ab807bd0f13daf961979</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2018-10-19 14:23:24</sys_updated_on>
        <template><![CDATA[<link href="f989cff14f4a430033e71aabb110c71b.cssdbx?" rel="stylesheet" type="text/css" />
<br>
<div class="mtable" >
  <div class="row" >
    <div class="box">{{data.system}} Alarm Repartition</div>
    <br>
    <a ng-repeat="item in data.list"  
       ng-href="/x_agsa_sapcockpit_alarm_list.do?sysparm_query=acknowledge!%3Dtrue%5Esid={{item.sid}}%5E{{item.module}}" target="_blank">
      <button ng-class="{'{{item.color}}':item.color}">
      {{item.name}}
      </button>
    </a>
    <div id="space"></div>
  </div>
</div>]]></template>
    </sp_widget>
</record_update>
